{"ast":null,"code":"import FormNewNote from \"../components/Notes/FormNewNote.vue\";\nimport InputSearchNote from \"../components/Notes/InputSearchNote.vue\";\nimport CardNote from \"../components/Notes/CardNote.vue\";\nimport MenuAside from \"../components/MenuAside.vue\";\nexport default {\n  name: \"Home\",\n  components: {\n    MenuAside,\n    FormNewNote,\n    InputSearchNote,\n    CardNote\n  },\n  data: () => ({\n    editingNote: {},\n    modeEditing: false,\n    allNotes: [{\n      idNote: 1,\n      noteTitle: \"Vue JS\",\n      noteDescription: \"Start developing with VueJS 3.\",\n      priorityLevel: 'Medium',\n      itsDone: true,\n      date: \"13/09/2022\",\n      status: true,\n      show: true\n    }, {\n      idNote: 2,\n      noteTitle: \"Nuxt.js\",\n      noteDescription: \"Read Nuxt.js documentation\",\n      priorityLevel: 'Low',\n      itsDone: true,\n      date: \"15/09/2022\",\n      status: true,\n      show: true\n    }, {\n      idNote: 3,\n      noteTitle: \"Github\",\n      noteDescription: \"Upload this ToDo app to Github pages\",\n      priorityLevel: 'High',\n      itsDone: false,\n      date: \"15/09/2022\",\n      status: true,\n      show: true\n    }, {\n      idNote: 4,\n      noteTitle: \"New project\",\n      noteDescription: \"Create a new NuxtJs project\",\n      priorityLevel: 'Medium',\n      itsDone: false,\n      date: \"15/09/2022\",\n      status: true,\n      show: true\n    }]\n  }),\n  methods: {\n    saveNota(newNota) {\n      this.allNotes.push(newNota);\n    },\n\n    deleteNote(index) {\n      if (confirm(\"Do you really want to delete this note?\") == true) {\n        this.allNotes[index].show = false;\n        this.allNotes[index].status = false;\n      } //this.allNotes.slice(index,1);\n\n    },\n\n    editNote(noteObject) {\n      this.modeEditing = true;\n      this.editingNote = noteObject;\n    },\n\n    updateNote(noteToUpdate) {\n      this.editingNote = noteToUpdate;\n      this.modeEditing = false;\n    },\n\n    closeModal(val) {\n      this.modeEditing = val;\n      this.editingNote = {};\n    },\n\n    searchNote(txtSearch) {\n      for (let i = 0; i < this.allNotes.length; i++) {\n        if (this.allNotes[i].noteTitle.toLowerCase().includes(txtSearch.toLowerCase()) || this.allNotes[i].noteDescription.toLowerCase().includes(txtSearch.toLowerCase()) || this.allNotes[i].priorityLevel.toLowerCase().includes(txtSearch.toLowerCase())) {\n          this.allNotes[i].show = true;\n        } else {\n          this.allNotes[i].show = false;\n        }\n      }\n    }\n\n  },\n  computed: {\n    notesLength() {\n      let notesNotDone = this.allNotes.filter(note => !note.itsDone);\n      return notesNotDone.length;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoCA;AACA;AACA;AACA;AACA;EACAA,YADA;EAEAC;IACAC,SADA;IAEAC,WAFA;IAGAC,eAHA;IAIAC;EAJA,CAFA;EAQAC;IACAC,eADA;IAEAC,kBAFA;IAGAC,WACA;MACAC,SADA;MAEAC,mBAFA;MAGAC,iDAHA;MAIAC,uBAJA;MAKAC,aALA;MAMAC,kBANA;MAOAC,YAPA;MAQAC;IARA,CADA,EAWA;MACAP,SADA;MAEAC,oBAFA;MAGAC,6CAHA;MAIAC,oBAJA;MAKAC,aALA;MAMAC,kBANA;MAOAC,YAPA;MAQAC;IARA,CAXA,EAqBA;MACAP,SADA;MAEAC,mBAFA;MAGAC,uDAHA;MAIAC,qBAJA;MAKAC,cALA;MAMAC,kBANA;MAOAC,YAPA;MAQAC;IARA,CArBA,EA8BA;MACAP,SADA;MAEAC,wBAFA;MAGAC,8CAHA;MAIAC,uBAJA;MAKAC,cALA;MAMAC,kBANA;MAOAC,YAPA;MAQAC;IARA,CA9BA;EAHA,EARA;EAoDAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;QACA;QACA;MACA,CAJA,CAKA;;IACA,CAVA;;IAWAC;MACA;MACA;IACA,CAdA;;IAeAC;MACA;MACA;IACA,CAlBA;;IAmBAC;MACA;MACA;IACA,CAtBA;;IAuBAC;MACA;QACA,kFACA,gFADA,IAEA,8EAFA,EAEA;UACA;QACA,CAJA,MAKA;UACA;QACA;MACA;IACA;;EAlCA,CApDA;EAwFAC;IACAC;MACA;MACA;IACA;;EAJA;AAxFA","names":["name","components","MenuAside","FormNewNote","InputSearchNote","CardNote","data","editingNote","modeEditing","allNotes","idNote","noteTitle","noteDescription","priorityLevel","itsDone","date","status","show","methods","saveNota","deleteNote","editNote","updateNote","closeModal","searchNote","computed","notesLength"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\r\n  <v-container fluid class=\"mt-5 myContainer\">\r\n    <v-card class=\"myCard\">\r\n      <v-row style=\"height:100%;width: 105%;\">\r\n        <v-col class=\"containerMenuAside\" sm=\"2\">\r\n          <menu-aside :notesLength=\"notesLength\"/>\r\n        </v-col>\r\n        <v-col sm=\"9\">\r\n          <v-container>\r\n            <v-row>\r\n              <v-col>\r\n                <InputSearchNote @onSearchNote=\"searchNote\"/>\r\n              </v-col>\r\n            </v-row>\r\n            <v-row class=\"containerNotes\">\r\n              <v-col sm=\"4\" v-for=\"(item, index) in allNotes\" v-bind:key=\"index\" v-show=\"item.show\">\r\n                <CardNote :indexNote=\"index\"\r\n                          :noteObject=\"item\"\r\n                          @onDeleteNote=\"deleteNote\"\r\n                          @onEditNote=\"editNote\"/>\r\n              </v-col>\r\n            </v-row>\r\n          </v-container>\r\n          <FormNewNote  :editingNote=\"editingNote\"\r\n                        :modeEditing=\"modeEditing\"\r\n                        @onSaveNote=\"saveNota\"\r\n                        @onCloseModal=\"closeModal\"\r\n                        @onUpdateNote=\"updateNote\"/>\r\n        </v-col>\r\n      </v-row>\r\n     \r\n    </v-card>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport FormNewNote from \"../components/Notes/FormNewNote.vue\"\r\nimport InputSearchNote from \"../components/Notes/InputSearchNote.vue\"\r\nimport CardNote from \"../components/Notes/CardNote.vue\"\r\nimport MenuAside from \"../components/MenuAside.vue\";\r\nexport default {\r\n  name: \"Home\",\r\n  components: {\r\n    MenuAside,\r\n    FormNewNote,\r\n    InputSearchNote,\r\n    CardNote\r\n  },\r\n  data: () => ({\r\n    editingNote:{},\r\n    modeEditing:false,\r\n    allNotes:[\r\n    {\r\n      idNote:1,\r\n      noteTitle: \"Vue JS\",\r\n      noteDescription: \"Start developing with VueJS 3.\",\r\n      priorityLevel:'Medium',\r\n      itsDone: true,\r\n      date: \"13/09/2022\",\r\n      status: true,\r\n      show: true\r\n    },\r\n    {\r\n      idNote:2,\r\n      noteTitle: \"Nuxt.js\",\r\n      noteDescription: \"Read Nuxt.js documentation\",\r\n      priorityLevel:'Low',\r\n      itsDone: true,\r\n      date: \"15/09/2022\",\r\n      status: true,\r\n      show: true\r\n    },\r\n    {\r\n      idNote:3,\r\n      noteTitle: \"Github\",\r\n      noteDescription: \"Upload this ToDo app to Github pages\",\r\n      priorityLevel:'High',\r\n      itsDone: false,\r\n      date: \"15/09/2022\",\r\n      status: true,\r\n      show: true\r\n    },{\r\n      idNote:4,\r\n      noteTitle: \"New project\",\r\n      noteDescription: \"Create a new NuxtJs project\",\r\n      priorityLevel:'Medium',\r\n      itsDone: false,\r\n      date: \"15/09/2022\",\r\n      status: true,\r\n      show: true\r\n    },],\r\n  }),\r\n  methods:{\r\n    saveNota(newNota){\r\n      this.allNotes.push(newNota);\r\n    },\r\n    deleteNote(index){\r\n      if (confirm(\"Do you really want to delete this note?\") == true) {\r\n        this.allNotes[index].show = false;\r\n        this.allNotes[index].status = false;\r\n      }\r\n      //this.allNotes.slice(index,1);\r\n    },\r\n    editNote(noteObject){\r\n      this.modeEditing = true;\r\n      this.editingNote  = noteObject;\r\n    },\r\n    updateNote(noteToUpdate){\r\n      this.editingNote = noteToUpdate;\r\n      this.modeEditing = false;\r\n    },\r\n    closeModal(val){\r\n      this.modeEditing = val;\r\n      this.editingNote = {};\r\n    },\r\n    searchNote(txtSearch){\r\n      for(let i=0; i<this.allNotes.length;i++){\r\n        if(this.allNotes[i].noteTitle.toLowerCase().includes(txtSearch.toLowerCase()) ||\r\n           this.allNotes[i].noteDescription.toLowerCase().includes(txtSearch.toLowerCase()) ||\r\n           this.allNotes[i].priorityLevel.toLowerCase().includes(txtSearch.toLowerCase())){\r\n          this.allNotes[i].show = true\r\n        }\r\n        else{\r\n          this.allNotes[i].show = false\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    notesLength() {\r\n      let notesNotDone = this.allNotes.filter(note => !note.itsDone)\r\n      return notesNotDone.length;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n  .v-application--wrap{\r\n    background: url(\"../assets/fondoBG.jpg\");\r\n  }\r\n  .myContainer, .myCard{\r\n    height: 83vh !important;\r\n    width: 95vw;\r\n  }\r\n  .myCard{\r\n    /* background-color: #F8F9FD; */\r\n    background: rgba(0,0,0,0.5) !important;\r\n  }\r\n  .containerMenuAside{\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n  .v-btn--absolute.v-btn--bottom, .v-btn--fixed.v-btn--bottom{\r\n    bottom: 70px;\r\n  }\r\n  .v-btn--absolute.v-btn--right, .v-btn--fixed.v-btn--right {\r\n    right: 65px;\r\n  }\r\n  .containerNotes{\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    height: 63vh;\r\n    margin-right: -60px;\r\n  }\r\n  ::-webkit-scrollbar {\r\n      width: 5px;\r\n}\r\n::-webkit-scrollbar-track {\r\n      background-color: #ef6e2887;\r\n      border-radius: 5px;\r\n} \r\n::-webkit-scrollbar-thumb {\r\n      background-color: rgba(0, 0, 0, 0.2);\r\n} \r\n</style>"]},"metadata":{},"sourceType":"module"}