{"ast":null,"code":"export default {\n  name: \"FormNewNote\",\n  props: {\n    editingNote: Object,\n    modeEditing: Boolean\n  },\n  data: () => ({\n    dialog: false,\n    valid: true,\n    newNota: {\n      idNote: Date.now(),\n      noteTitle: '',\n      noteDescription: '',\n      date: '',\n      priorityLevel: null,\n      itsDone: false,\n      colorBG: \"\",\n      status: true,\n      show: true\n    },\n    nameRules: [v => !!v || 'Title is required'],\n    descriptionRules: [v => !!v || 'Description is required'],\n    priorityLevelOptions: ['Low', 'Medium', 'High']\n  }),\n  methods: {\n    padTo2Digits(num) {\n      return num.toString().padStart(2, '0');\n    },\n\n    formatDate(date) {\n      return [this.padTo2Digits(date.getDate()), this.padTo2Digits(date.getMonth() + 1), date.getFullYear()].join('/');\n    },\n\n    save() {\n      let dateToday = this.formatDate(new Date());\n      let myNewNoteToEmit = {\n        idNote: Date.now(),\n        noteTitle: this.newNota.noteTitle,\n        noteDescription: this.newNota.noteDescription,\n        date: dateToday,\n        priorityLevel: this.newNota.priorityLevel,\n        itsDone: this.newNota.itsDone,\n        colorBG: this.newNota.colorBG,\n        status: true,\n        show: true\n      };\n      this.$emit('onSaveNote', myNewNoteToEmit);\n      this.$refs.form.validate();\n      this.dialog = false;\n      this.resetNewNote();\n    },\n\n    cancel() {\n      this.dialog = false;\n      this.$emit('onCloseModal', this.dialog);\n      this.resetNewNote();\n    },\n\n    resetValidation() {\n      this.$refs.form.resetValidation();\n    },\n\n    resetNewNote() {\n      this.$refs.form.resetValidation();\n      this.newNota.noteTitle = '', this.newNota.noteDescription = '', this.newNota.priorityLevel = null, this.newNota.itsDone = false, this.newNota.colorBG = \"\", this.newNota.status = true, this.newNota.show = true;\n    }\n\n  },\n  watch: {\n    modeEditing() {\n      this.dialog = this.modeEditing; //this.$emit('onCloseModal', this.dialog)\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0EA;EACAA,mBADA;EAEAC;IACAC,mBADA;IAEAC;EAFA,CAFA;EAMAC;IACAC,aADA;IAEAC,WAFA;IAGAC;MACAC,kBADA;MAEAC,aAFA;MAGAC,mBAHA;MAIAC,QAJA;MAKAC,mBALA;MAMAC,cANA;MAOAC,WAPA;MAQAC,YARA;MASAC;IATA,CAHA;IAeAC,YACAC,+BADA,CAfA;IAkBAC,mBACAD,qCADA,CAlBA;IAsBAE,uBACA,KADA,EAEA,QAFA,EAGA,MAHA;EAtBA,EANA;EAoCAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA,QACA,iCADA,EAEA,sCAFA,EAGAZ,kBAHA,EAIAa,IAJA,CAIA,GAJA;IAKA,CAVA;;IAWAC;MACA;MACA;QACAjB,kBADA;QAEAC,iCAFA;QAGAC,6CAHA;QAIAC,eAJA;QAKAC,yCALA;QAMAC,6BANA;QAOAC,6BAPA;QAQAC,YARA;QASAC;MATA;MAWA;MACA;MACA;MACA;IACA,CA5BA;;IA6BAU;MACA;MACA;MACA;IACA,CAjCA;;IAkCAC;MACA;IACA,CApCA;;IAqCAC;MACA;MACA,6BACA,iCADA,EAEA,iCAFA,EAGA,4BAHA,EAIA,yBAJA,EAKA,0BALA,EAMA,wBANA;IAOA;;EA9CA,CApCA;EAoFAC;IACA1B;MACA,+BADA,CAEA;IACA;;EAJA;AApFA","names":["name","props","editingNote","modeEditing","data","dialog","valid","newNota","idNote","noteTitle","noteDescription","date","priorityLevel","itsDone","colorBG","status","show","nameRules","v","descriptionRules","priorityLevelOptions","methods","padTo2Digits","formatDate","join","save","cancel","resetValidation","resetNewNote","watch"],"sourceRoot":"src/components/Notes","sources":["FormNewNote.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-dialog v-model=\"dialog\" persistent max-width=\"800px\">\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn fab class=\"mx-2\" dark color=\"#ff5900\" fixed right bottom v-bind=\"attrs\" v-on=\"on\">\r\n                    <v-icon dark> mdi-plus </v-icon>\r\n                </v-btn>\r\n            </template>\r\n            <v-card dark color=\"rgb(48, 75, 80)\">\r\n                <v-card-title>\r\n                    <span class=\"text-h5\">\r\n                        <span v-if=\"modeEditing\">Edit</span>\r\n                        <span v-else>New</span>\r\n                        Note\r\n                    </span>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-container fluid class=\"mt-4\">\r\n                        <v-row>\r\n                            <v-col>\r\n                                <!--New Note-->\r\n                                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n                                    <v-text-field dense v-model=\"newNota.noteTitle\" :rules=\"nameRules\" label=\"Title\" required>\r\n                                    </v-text-field>\r\n\r\n                                    <v-text-field dense v-model=\"newNota.noteDescription\" :rules=\"descriptionRules\"\r\n                                        label=\"Description\" required></v-text-field>\r\n\r\n                                    <v-select v-model=\"newNota.priorityLevel\" :items=\"priorityLevelOptions\"\r\n                                        :rules=\"[v => !!v || 'Priority is required']\" label=\"Priority\" required>\r\n                                    </v-select>\r\n\r\n                                    <v-checkbox v-model=\"newNota.itsDone\" label=\"It's done?\" required></v-checkbox>\r\n\r\n                                    <v-btn :disabled=\"!valid\" color=\"#ff7c00\" class=\"mr-4\" @click=\"save\">\r\n                                        Save\r\n                                    </v-btn>\r\n\r\n                                    <v-btn outlined color=\"#ff7c00\" class=\"mr-4\" @click=\"cancel\">\r\n                                        Cancel\r\n                                    </v-btn>\r\n                                </v-form>\r\n                                <!--Edit note-->\r\n                                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n                                    <v-text-field dense v-model=\"editingNote.noteTitle\" :rules=\"nameRules\" label=\"Title\" required>\r\n                                    </v-text-field>\r\n\r\n                                    <v-text-field dense v-model=\"editingNote.noteDescription\" :rules=\"descriptionRules\"\r\n                                        label=\"Description\" required></v-text-field>\r\n\r\n                                    <v-select v-model=\"editingNote.priorityLevel\" :items=\"priorityLevelOptions\"\r\n                                        :rules=\"[v => !!v || 'Priority is required']\" label=\"Priority\" required>\r\n                                    </v-select>\r\n\r\n                                    <v-checkbox v-model=\"editingNote.itsDone\" label=\"It's done?\" required></v-checkbox>\r\n\r\n                                    <v-btn :disabled=\"!valid\" color=\"#ff7c00\" class=\"mr-4\" @click=\"save\">\r\n                                        Update\r\n                                    </v-btn>\r\n\r\n                                    <v-btn outlined color=\"#ff7c00\" class=\"mr-4\" @click=\"cancel\">\r\n                                        Cancel\r\n                                    </v-btn>\r\n                                </v-form>\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-container>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    name: \"FormNewNote\",\r\n    props:{\r\n        editingNote:Object,\r\n        modeEditing: Boolean\r\n    },\r\n    data: () => ({\r\n        dialog: false,\r\n        valid: true,\r\n        newNota:{\r\n            idNote: Date.now(),\r\n            noteTitle: '',\r\n            noteDescription: '',\r\n            date:'',\r\n            priorityLevel: null,\r\n            itsDone: false,\r\n            colorBG: \"\",\r\n            status: true,\r\n            show:true\r\n        },\r\n\r\n        nameRules: [\r\n            v => !!v || 'Title is required',\r\n        ],\r\n        descriptionRules: [\r\n            v => !!v || 'Description is required',\r\n        ],\r\n        \r\n        priorityLevelOptions: [\r\n            'Low',\r\n            'Medium',\r\n            'High',\r\n        ],\r\n        \r\n        \r\n    }),\r\n    methods: {\r\n        padTo2Digits(num) {\r\n            return num.toString().padStart(2, '0');\r\n        },\r\n        formatDate(date) {\r\n            return [\r\n                this.padTo2Digits(date.getDate()),\r\n                this.padTo2Digits(date.getMonth() + 1),\r\n                date.getFullYear(),\r\n            ].join('/');\r\n        },\r\n        save() {\r\n            let dateToday = this.formatDate(new Date());\r\n            let myNewNoteToEmit = {\r\n                idNote: Date.now(),\r\n                noteTitle: this.newNota.noteTitle,\r\n                noteDescription: this.newNota.noteDescription,\r\n                date:dateToday,\r\n                priorityLevel: this.newNota.priorityLevel,\r\n                itsDone: this.newNota.itsDone,\r\n                colorBG:this.newNota.colorBG,\r\n                status: true,\r\n                show:true\r\n            }\r\n            this.$emit('onSaveNote', myNewNoteToEmit)\r\n            this.$refs.form.validate();\r\n            this.dialog =false;\r\n            this.resetNewNote();\r\n        },\r\n        cancel() {\r\n            this.dialog = false\r\n            this.$emit('onCloseModal', this.dialog)\r\n            this.resetNewNote();\r\n        },\r\n        resetValidation() {\r\n            this.$refs.form.resetValidation()\r\n        },\r\n        resetNewNote(){\r\n            this.$refs.form.resetValidation()\r\n            this.newNota.noteTitle= '',\r\n            this.newNota.noteDescription= '',\r\n            this.newNota.priorityLevel= null,\r\n            this.newNota.itsDone= false,\r\n            this.newNota.colorBG= \"\",\r\n            this.newNota.status= true,\r\n            this.newNota.show=true\r\n        }\r\n    },\r\n    watch:{\r\n        modeEditing(){\r\n            this.dialog = this.modeEditing;\r\n            //this.$emit('onCloseModal', this.dialog)\r\n        }\r\n    }\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}